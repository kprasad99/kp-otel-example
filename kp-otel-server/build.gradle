plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

group = 'io.github.kprasad99'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework:spring-jdbc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	
	//implementation "org.springframework.boot:spring-boot-starter-log4j2"
    //modules {
    //    module("org.springframework.boot:spring-boot-starter-logging") {
    //        replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
    //    }
    //}

	// otel based instrumentation
	// implementation 'io.micrometer:micrometer-registry-otlp'
	implementation 'io.micrometer:micrometer-tracing-bridge-otel'
	implementation 'io.opentelemetry:opentelemetry-exporter-otlp'
	runtimeOnly "io.opentelemetry.instrumentation:opentelemetry-logback-mdc-1.0:${otelInstrumentationVersion}"
	
	implementation "io.opentelemetry.instrumentation:opentelemetry-spring-webflux-5.3:${otelInstrumentationVersion}"
	implementation "io.opentelemetry.instrumentation:opentelemetry-r2dbc-1.0:${otelInstrumentationVersion}"
	implementation "io.opentelemetry.instrumentation:opentelemetry-jdbc:${otelInstrumentationVersion}"
	
	
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "no.entur.mapstruct.spi:protobuf-spi-impl:${mapstructProtobufVersion}"


	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
